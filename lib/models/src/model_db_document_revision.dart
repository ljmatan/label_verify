import 'dart:convert' as dart_convert;
import 'dart:typed_data' as dart_typed_data;
import 'dart:io' as dart_io;

/// A model class representing a revision or an update of a document.
///
class LvModelDocumentRevision {
  /// Default, unnamed class constructor.
  ///
  LvModelDocumentRevision({
    required this.id,
    required this.documentId,
    required this.createdAt,
    required this.filePath,
    required this.fileImageDisplayPaths,
  });

  /// Document revision identifier generated by the SQL database.
  ///
  int id;

  /// The identifer of the document specified with this review configuration.
  ///
  int documentId;

  /// Time of the revision creation.
  ///
  DateTime createdAt;

  /// Document representation in byte format.
  ///
  String filePath;

  /// Private class property used for storing of the file contents after loading.
  ///
  dart_typed_data.Uint8List? _fileBytes;

  /// Function used for fetching file contents in the form of unsigned 8-bit integer list.
  ///
  Future<dart_typed_data.Uint8List> fileBytes() async {
    _fileBytes ??= await dart_io.File(filePath).readAsBytes();
    return _fileBytes!;
  }

  /// Path of the converted image display of document contents.
  ///
  List<String> fileImageDisplayPaths;

  /// The number of pages available with the document.
  ///
  int get pages => fileImageDisplayPaths.length;

  /// Private class property used for storing of the file image display contents after loading.
  ///
  List<dart_typed_data.Uint8List>? _fileImageDisplays;

  /// Function used for fetching file image display contents in the form of unsigned 8-bit integer list.
  ///
  Future<List<dart_typed_data.Uint8List>> getFileImageDisplays() async {
    _fileImageDisplays ??= await Future.wait(
      [
        for (final imageDisplayPath in fileImageDisplayPaths) dart_io.File(imageDisplayPath).readAsBytes(),
      ],
    );
    return _fileImageDisplays!;
  }

  /// A collection of revision configuration identifiers with which a discrepancy was found.
  ///
  List<int>? errorConfigurationIds;

  /// Factory constructor used to generate a class instance from database data format.
  ///
  factory LvModelDocumentRevision.fromJson(Map json) {
    return LvModelDocumentRevision(
      id: json['id'],
      documentId: json['documentId'],
      createdAt: DateTime.parse(
        json['createdAtIso8601'],
      ),
      filePath: json['filePath'],
      fileImageDisplayPaths: List<String>.from(
        dart_convert.jsonDecode(
          json['fileImageDisplayPaths'],
        ),
      ),
    );
  }

  /// Method used for generating data in the database format.
  ///
  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'documentId': documentId,
      'createdAtIso8601': createdAt.toIso8601String(),
      'filePath': filePath,
      'fileImageDisplayPaths': dart_convert.jsonEncode(
        fileImageDisplayPaths,
      ),
    };
  }
}
